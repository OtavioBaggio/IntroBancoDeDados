PROJETO DE BANCO DE DADOS
	- Modelagem
		- modelos: conceitual(diagramas), lógico(chave estrangeira), físico(tipos e restrições)
		- regra do negócio
	- Sistema Gerenciador de Banco de Dados - SGBD: coleção de serviços (segurança, integridade -> isolamento, consistência, atomicidade)
		- Transações: (ACID: atomicidade, consistência, isolamento e durabilidade): ato de manipular dados: inserir, selecionar, atualizar, deletar
		- Linguagem SQL
			- QUEM OPERACIONALIZA AS TRANSAÇÕES É A LINGUAGEM SQL
				- DML (Data Manipulation Language):
					- Criar databases/esquemas, tabelas, visões
				- DDL (Data Definition Language):
					- Inserir, atualizar e deletar


Data Base Admnistrator (pesquisar mais sobre)


# MySQL
	show databases;
	use nomeDataBaseDesejado;
	show tables;
	
	aluno n ---- 1 curso

	aluno(alunoId, nome, curso)
		curso referencia curso

	curso(cursoId, nome)

	create table curso(
		cursoId int auto_increment,
		nome varchar(50), not null,
		primary key(cursoId)
		index 'nomeCurso' (nome) asc
	);

	insert into curso (cursoId, nome) values (1, "Ciência da Computação")
	insert into curso (cursoId, nome) values ("Sistemas de Informação")
	insert into curso (cursoId, nome) values ("Jogos Digitais")

	create table aluno(
		alunoId int auto_increment,
		nome varchar(50) not null,
		curso int not null,
		primary key (alunoId),
		index 'nomeAluno' (nome) asc,
		foreign key curso references curso(cursoId)
	);

	insert into aluno (alunoId ,nome, curso) values (1000, "Bernardo Ries", 10)
	insert into aluno (alunoId ,nome, curso) values (1001, "João Giovelli", 1)
	insert into aluno (alunoId ,nome, curso) values (1002, "Matheus Rossato", 2)
	insert into aluno (alunoId ,nome, curso) values (1003, "Leo Brum", 2)
	insert into aluno (alunoId ,nome, curso) values (1004, "Silvio Andrade", 3)
	insert into aluno (alunoId ,nome, curso) values (1005, "Anne Martins", NULL)
	insert into aluno (alunoId ,nome, curso) values (1006, "Dante Zamberlan", NULL)


SQL em SGBD:
	- Álgebra relacional
		- projeção - isolar coluna(s) de uma ou mais tabelas
		select alunoId
		from aluno;

		select nome, curso
		from aluno;

		- seleção - projetar com condição
		select nome
		from aluno
		where curso == 1;

		select nome, alunoId
		from aluno
		whre curso == NULL;

		select nome, alunoId
		from aluno
		where curso == 1 or curso == 3


		- produto cartesiano -> essência da junção (join)
		listar todos os alunos e os nomes de seus cursos
		select aluno.nome, curso.nome
		from aluno, curso
		where aluno.curso = curso.cursoId;

		listar todos os alunos do curso Ciência da Computação
		select aluno.nome
		from aluno, curso
		where curso.cursoId = aluno.curso and curso.nome = "Ciência da Computação";
		ou
		where curso.nome = "Ciência da Computação" and curso.cursoId = aluno.curso;

		quantos alunos são do curso Ciência da Computação
		select count(*)
		from aluno, curso
		where curso.nome = "Ciência da Computação" and curso.cursoId = aluno.curso; 



------ Exercício Prático -------
	Diagrama Comic no GitHub alexandrezamberlan


%listar todos os cursos cadastrados e sua relação com instituição(id):
select curso.nome, curso.Instituicao_idInstituicao
from curso;

%listar todos os cursos e nomes respectivos de suas instituições:
select curso.nome, instituição.nome
from curso, instituição
where curso.instituicao_idInstituicao = instituição.idInstituicao;

%Mostrar todos os usuário de cursos que tenha bio no nome e seus respectivos cursos:
select usuário.nome, curso.nome
from usuário, curso, usuario_has_curso
where curso.nome like "Bio" and
	curso.idCurso - usuario_has_curso.curso_idCurso and
	usuário.idUsuario = usuario_has_curso.usuario_idUsuario;

%Listar todos os usuário que participam como avaliadores:
select usuario.*
from usuário, avaliacao
where usuário.idUsuario = avaliação.usuario_idUsuario_avaliadorResponsavel or
	usuário.idUsuario  avaliação.usuario_idUsuario_avaliadorSuplente;

%Listar os avaliadores que não são competentes com a avaliação:
select usuário.nome
from usuário, avaliação
where (avaliação.parecerAvaliadorResponsavel  NULL or avaliação.parecerAvaliadorSuplente = NULL) 
	and
	(usuário.idUsuario = avaliação.usuario_idUsuario_avaliadorResponsavel or
	usuário.idUsuario = avaliação.usuario_idUsuario_avaliadorSuplente);


------ Exercício Prático -------
	Diagrama SistemaLivraria no GitHub alexandrezamberlan


%mostrar as transportadoras que entregam produtos para o cliente CPF %88877256087:

select transportadora.*
from transportadora, entrega, cliente
where cliente.cpf = "88877256087" and
	cliente.idCliente = venda.cliente_idCliente and
	venda.numeroFiscal = entrega.venda_numeroNotaFiscal and
	transportadora.idTransportadora = entrega.transportadora_idTransportadora;
	
	